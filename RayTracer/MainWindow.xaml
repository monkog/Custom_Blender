<Window x:Class="RayTracer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:RayTracer.ViewModel"
        xmlns:helpers="clr-namespace:RayTracer.Helpers"
        xmlns:converters="clr-namespace:RayTracer.Helpers.Converters"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:eventCommand="clr-namespace:RayTracer.Helpers.EventCommand"
        Title="Torus" WindowState="Maximized" d:DesignWidth="1333" d:DesignHeight="768">
    <d:Window.DataContext>
        <viewModel:RayViewModel />
    </d:Window.DataContext>
    <Window.Resources>
        <converters:TransformedPoint x:Key="TransformedPoint"/>
        <converters:ReducedValueConverter x:Key="ReducedValueConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="900"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="150"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <GroupBox Margin="20" Grid.Column="0" Grid.Row="0" Height="75">
            <Button Width="100" Margin="20" Height="25" Content="Add torus" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding AddTorusCommand}"/>
        </GroupBox>
        <Canvas Grid.Column="0" Grid.Row="1">
            <i:Interaction.Behaviors>
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseClickCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseLeftButtonDown" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseUpCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseLeftButtonUp" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseMoveCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseMove" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseWheelCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseWheel" PassArguments="True" />
            </i:Interaction.Behaviors>
            <ItemsControl ItemsSource="{Binding Meshes}" Width="700" Height="500" Canvas.Left="100"
                          helpers:SizeObserver.Observe="True"
                          helpers:SizeObserver.ObservedWidth="{Binding ViewportWidth, Mode=OneWayToSource}"
                          helpers:SizeObserver.ObservedHeight="{Binding ViewportHeight, Mode=OneWayToSource}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=Width}" 
                                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=Height}"
                                Background="Black"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Polyline Points="{Binding Edges.Points}" StrokeThickness="1" Stroke="LightBlue"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ItemsControl ItemsSource="{Binding Meshes}" Width="700" Height="500" Canvas.Left="100"
                      helpers:SizeObserver.Observe="True"
                      helpers:SizeObserver.ObservedWidth="{Binding ViewportWidth, Mode=OneWayToSource}"
                      helpers:SizeObserver.ObservedHeight="{Binding ViewportHeight, Mode=OneWayToSource}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True"
                                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=Width}" 
                                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=Height}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding TransformedVertices}">
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="FrameworkElement">
                                    <Setter Property="Canvas.Left" Value="{Binding X, Converter={StaticResource ReducedValueConverter}, ConverterParameter=3}" />
                                    <Setter Property="Canvas.Top" Value="{Binding Y, Converter={StaticResource ReducedValueConverter}, ConverterParameter=3}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="Point">
                                    <Ellipse Width="6" Height="6" Fill="LightCoral"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Canvas>
        <StackPanel Grid.Column="1" Grid.Row="0" Margin="20">
            <StackPanel Orientation="Horizontal" Margin="20">
                <TextBlock Text="L: "/>
                <TextBox Width="100" Text="{Binding L}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="20">
                <TextBlock Text="V: "/>
                <TextBox Width="100" Text="{Binding V}"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
