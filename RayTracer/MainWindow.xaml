<Window x:Class="RayTracer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:RayTracer.ViewModel"
        xmlns:sceneManager="clr-namespace:RayTracer.Model.Shapes"
        xmlns:helpers="clr-namespace:RayTracer.Helpers"
        xmlns:converters="clr-namespace:RayTracer.Helpers.Converters"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:eventCommand="clr-namespace:RayTracer.Helpers.EventCommand"
        Title="Torus" WindowState="Maximized" d:DesignWidth="1333" d:DesignHeight="768">
    <d:Window.DataContext>
        <viewModel:RayViewModel />
    </d:Window.DataContext>
    <Window.Resources>
        <converters:TransformedPoint x:Key="TransformedPoint"/>
        <converters:ReducedValueConverter x:Key="ReducedValueConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="900"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Canvas Grid.Column="0" ClipToBounds="True">
            <i:Interaction.Behaviors>
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseClickCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseLeftButtonDown" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseUpCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseLeftButtonUp" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseMoveCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseMove" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseWheelCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseWheel" PassArguments="True" />
            </i:Interaction.Behaviors>
            <ItemsControl ItemsSource="{Binding Meshes}" Width="800" Height="600" Canvas.Left="50" Canvas.Top="50"
                          helpers:SizeObserver.Observe="True"
                          helpers:SizeObserver.ObservedWidth="{Binding ViewportWidth, Mode=OneWayToSource}"
                          helpers:SizeObserver.ObservedHeight="{Binding ViewportHeight, Mode=OneWayToSource}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=Width}" 
                                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=Height}"
                                Background="Black" ClipToBounds="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Polyline Points="{Binding Edges.Points}" StrokeThickness="1" Stroke="LightBlue"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Canvas>
        <!--<Image Source="{Binding SceneImage, Source={x:Static sceneManager:SceneManager.Instance}}" Width="800" Height="600" Grid.Column="0"/>-->
        <StackPanel Grid.Column="1" Margin="20">
            <StackPanel Orientation="Horizontal">
                <GroupBox Margin="20" Header="Torus">
                    <StackPanel>
                        <Button Width="100" Margin="20" Height="25" Content="Add torus" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding AddTorusCommand}"/>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="L: "/>
                            <TextBox Width="100" Text="{Binding L}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="V: "/>
                            <TextBox Width="100" Text="{Binding V}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Margin="20" Header="Ellipsoide">
                    <StackPanel>
                        <Button Content="Add Ellipsoide" Command="{Binding AddEllipsoideCommand}" Margin="20"/>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="a: "/>
                            <TextBox Width="100" Text="{Binding A}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="b: "/>
                            <TextBox Width="100" Text="{Binding B}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="c: "/>
                            <TextBox Width="100" Text="{Binding C}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="I: "/>
                            <TextBox Width="100" Text="{Binding I}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <GroupBox Header="Rotations">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="X rotation:" Margin="5"/>
                        <Slider Minimum="0" Maximum="360" Value="{Binding XSlider}" Width="300"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Y rotation:" Margin="5"/>
                        <Slider Minimum="0" Maximum="360" Value="{Binding YSlider}" Width="300"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Z rotation:" Margin="5"/>
                        <Slider Minimum="0" Maximum="360" Value="{Binding ZSlider}" Width="300"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </Grid>
</Window>
