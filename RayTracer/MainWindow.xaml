<Window x:Class="RayTracer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:RayTracer.ViewModel"
        xmlns:converters="clr-namespace:RayTracer.Helpers.Converters"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:eventCommand="clr-namespace:RayTracer.Helpers.EventCommand"
        xmlns:model="clr-namespace:RayTracer.Model"
        xmlns:shapes="clr-namespace:RayTracer.Model.Shapes"
        Title="Torus" WindowState="Maximized" d:DesignWidth="1600" d:DesignHeight="900">
    <d:Window.DataContext>
        <viewModel:RayViewModel />
    </d:Window.DataContext>
    <Window.Resources>
        <converters:ReducedValueConverter x:Key="ReducedValueConverter"/>
        <converters:BitmapToBitmapImageConverter x:Key="BitmapToBitmapImageConverter"/>
        <converters:DebugConverter x:Key="DebugConverter"/>
        <DataTemplate DataType="{x:Type shapes:BezierCurveC0}">
            <StackPanel>
                <CheckBox IsChecked="{Binding IsSelected}" Content="Select"/>
                <CheckBox IsChecked="{Binding DisplayEdges}" Content="View Polygon"/>
                <TextBox Text="{Binding Name}"/>
                <TreeView ItemsSource="{Binding Vertices}">
                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <CheckBox IsChecked="{Binding IsCurvePointSelected}"/>
                                <TextBox Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type shapes:BezierCurveC2}">
            <StackPanel>
                <CheckBox IsChecked="{Binding IsSelected}" Content="Select"/>
                <CheckBox IsChecked="{Binding DisplayEdges}" Content="View Polygon"/>
                <CheckBox IsChecked="{Binding IsBernsteinBasis}" Content="Bernstein Basis"/>
                <CheckBox IsChecked="{Binding EquidistantPoints}" Content="Equidistant" IsEnabled="{Binding IsInterpolation}"/>
                <TextBox Text="{Binding Name}"/>
                <TreeView ItemsSource="{Binding Vertices}">
                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsSelected}" Content="Select"/>
                                    <CheckBox IsChecked="{Binding IsCurvePointSelected}" Content="Delete?"/>
                                </StackPanel>
                                <TextBox Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type shapes:BezierPatchC0}">
            <StackPanel>
                <CheckBox IsChecked="{Binding IsSelected}" Content="Select"/>
                <CheckBox IsChecked="{Binding DisplayEdges}" Content="View Polygon"/>
                <TextBox Text="{Binding Name}"/>
                <TreeView ItemsSource="{Binding Vertices}">
                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsSelected}" Content="Select"/>
                                </StackPanel>
                                <TextBox Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=KeyUpCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="NumPad8"/>
        <KeyBinding Command="{Binding Path=KeyDownCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="NumPad2"/>
        <KeyBinding Command="{Binding Path=KeyLeftCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="NumPad4"/>
        <KeyBinding Command="{Binding Path=KeyRightCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="NumPad6"/>
        <KeyBinding Command="{Binding Path=KeyDeleteCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="Delete"/>
        <KeyBinding Command="{Binding Path=KeySelectCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="NumPad5"/>
        <KeyBinding Command="{Binding Path=KeyInsertCommand, Source={x:Static viewModel:KeyboardEventManager.Instance}}" Key="I"/>
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="900"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu>
            <MenuItem Header="Save Scene" Command="{Binding SaveSceneCommand}"/>
            <MenuItem Header="Load Scene" Command="{Binding LoadSceneCommand}"/>
            <MenuItem Header="Clear Scene" Command="{Binding ClearSceneCommand}"/>
            <MenuItem Header="Deselect All" Command="{Binding DeselectAllCommand}"/>
            <MenuItem Header="Select All Points" Command="{Binding SelectAllCommand}"/>
        </Menu>
        <Canvas Grid.Column="0" ClipToBounds="True">
            <i:Interaction.Behaviors>
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseClickCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseLeftButtonDown" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseUpCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseLeftButtonUp" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseMoveCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseMove" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=MouseWheelCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseWheel" PassArguments="True" />
                <eventCommand:EventToCommandBehavior Command="{Binding Path=RightMouseButtonCommand, Source={x:Static viewModel:MouseEventManager.Instance}}" Event="MouseRightButtonUp" PassArguments="True" />
            </i:Interaction.Behaviors>
            <Image Source="{Binding SceneImage, Source={x:Static viewModel:SceneManager.Instance}, Converter={StaticResource ResourceKey=BitmapToBitmapImageConverter}}" Width="800" Height="600" Canvas.Left="50" Canvas.Top="50"/>
        </Canvas>
        <StackPanel Grid.Column="0" Margin="20, 700, 0, 0" Orientation="Horizontal">
            <GroupBox Header="Scene Info">
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Cursor X:"/>
                            <Label Content="{Binding XPosition, Source={x:Static model:Cursor3D.Instance}, StringFormat=F2}" Width="50"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Cursor Y:"/>
                            <Label Content="{Binding YPosition, Source={x:Static model:Cursor3D.Instance}, StringFormat=F2}" Width="50"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Cursor Z:"/>
                            <Label Content="{Binding ZPosition, Source={x:Static model:Cursor3D.Instance}, StringFormat=F2}" Width="50"/>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Margin="10, 0, 0, 0">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Screen X:"/>
                                <Label Content="{Binding XScreenPosition, Source={x:Static model:Cursor3D.Instance}, StringFormat=F2}" Width="50"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Screen Y:"/>
                                <Label Content="{Binding YScreenPosition, Source={x:Static model:Cursor3D.Instance}, StringFormat=F2}" Width="50"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <StackPanel>
                <GroupBox Header="Rotations">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="X rotation:" Margin="5"/>
                            <Slider Minimum="0" Maximum="360" Value="{Binding XSlider}" Width="300"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Y rotation:" Margin="5"/>
                            <Slider Minimum="0" Maximum="360" Value="{Binding YSlider}" Width="300"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Z rotation:" Margin="5"/>
                            <Slider Minimum="0" Maximum="360" Value="{Binding ZSlider}" Width="300"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Column="1" Margin="20">
            <StackPanel Orientation="Horizontal">
                <GroupBox Margin="20" Header="Torus">
                    <StackPanel>
                        <Button Width="100" Margin="20" Height="25" Content="Add torus" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding AddTorusCommand}"/>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="r: "/>
                            <TextBox Width="100" Text="{Binding SmallR, Source={x:Static viewModel:MeshManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="R: "/>
                            <TextBox Width="100" Text="{Binding BigR, Source={x:Static viewModel:MeshManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="L: "/>
                            <TextBox Width="100" Text="{Binding L, Source={x:Static viewModel:MeshManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="V: "/>
                            <TextBox Width="100" Text="{Binding V, Source={x:Static viewModel:MeshManager.Instance}}"/>
                        </StackPanel>
                        <CheckBox Content="Stereoscopic view" Margin="20, 2" IsChecked="{Binding IsStereoscopic, Source={x:Static viewModel:SceneManager.Instance}}"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox Margin="20" Header="Ellipsoide" Visibility="Collapsed">
                    <StackPanel>
                        <Button Content="Add Ellipsoide" Command="{Binding AddEllipsoideCommand}" Margin="20"/>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="a: "/>
                            <TextBox Width="100" Text="{Binding A}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="b: "/>
                            <TextBox Width="100" Text="{Binding B}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="c: "/>
                            <TextBox Width="100" Text="{Binding C}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20">
                            <TextBlock Text="m: "/>
                            <TextBox Width="100" Text="{Binding M, Source={x:Static viewModel:SceneManager.Instance}}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Margin="20" Header="Bezier Patch">
                    <StackPanel>
                        <Button Content="Add Bezier Patch" Command="{Binding AddBezierPatchC0Command}" Margin="20"/>
                        <CheckBox Margin="20, 0" Content="Is Cylinder" IsChecked="{Binding IsCylinder, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        <StackPanel Margin="20, 0" Orientation="Horizontal">
                            <RadioButton Content="C0"/>
                            <RadioButton Margin="20, 0" Content="C2"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="Horizontal Patches: "/>
                            <TextBox Width="50" Text="{Binding HorizontalPatches, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="Vertical Patches: "/>
                            <TextBox Width="50" Text="{Binding VerticalPatches, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="Width/Radius: "/>
                            <TextBox Width="50" Text="{Binding PatchWidth, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="Height: "/>
                            <TextBox Width="50" Text="{Binding PatchHeight, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="Horizontal Patch Divisions: "/>
                            <TextBox Width="50" Text="{Binding HorizontalPatchDivisions, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20, 2">
                            <TextBlock Text="Vertical Patch Divisions: "/>
                            <TextBox Width="50" Text="{Binding VerticalPatchDivisions, Source={x:Static viewModel:PatchManager.Instance}}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <GroupBox Header="Points">
                        <ListView Width="200" Height="400" ItemsSource="{Binding Points, Source={x:Static viewModel:PointManager.Instance}}" SelectionMode="Multiple">
                            <ListView.Resources>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Add point to Bézier curve" Command="{Binding Path=DataContext.AddPointToBezierCurve, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                    <MenuItem Header="Create Bézier curve C0" Command="{Binding Path=DataContext.CreateBezierCurveC0, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                    <MenuItem Header="Create Bézier curve C2"  Command="{Binding Path=DataContext.CreateBezierCurveC2, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                    <MenuItem Header="Create Bézier curve C2 with points"  Command="{Binding Path=DataContext.CreateBezierCurveC2WithPoints, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                </ContextMenu>
                            </ListView.Resources>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding IsSelected}"/>
                                        <TextBox Text="{Binding Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" >
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </GroupBox>
                </StackPanel>
                <TabControl Height="500">
                    <TabItem Header="Meshes">
                        <ListView ItemsSource="{Binding Meshes, Source={x:Static viewModel:MeshManager.Instance}}" SelectionMode="Single">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Name}"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </TabItem>
                    <TabItem Header="Curves">
                        <ListView ItemsSource="{Binding Curves, Source={x:Static viewModel:CurveManager.Instance}}" SelectionMode="Single"/>
                    </TabItem>
                    <TabItem Header="Patches">
                        <ListView ItemsSource="{Binding Patches, Source={x:Static viewModel:PatchManager.Instance}}" SelectionMode="Single"/>
                    </TabItem>
                </TabControl>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
